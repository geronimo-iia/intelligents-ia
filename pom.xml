<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.intelligents-ia</groupId>
	<artifactId>intelligents-ia</artifactId>
	<packaging>pom</packaging>
	<name>Intelligents-ia</name>
	<version>1.4.4-SNAPSHOT</version>
	<description>Super POM for Intelligents-ia Project.</description>
	<url>http://intelligents-ia.com</url>
	<inceptionYear>2011</inceptionYear>
	<developers>
		<developer>
			<id>jerome.guibert.intelligents.ia.com</id>
			<name>Jerome Guibert</name>
			<organization>Intelligents-ia</organization>
			<email>jguibert@intelligents-ia.com</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<issueManagement>
		<url>https://github.com/geronimo-iia/intelligents-ia/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>
	<scm>
		<url>https://github.com/geronimo-iia/intelligents-ia.git</url>
		<connection>scm:git:https://github.com/geronimo-iia/intelligents-ia.git</connection>
	</scm>
	<organization>
		<name>Intelligents-ia</name>
		<url>http://intelligents-ia.com</url>
	</organization>
	<!-- ******************************************************************* -->
	<!-- BUILD -->
	<!-- ******************************************************************* -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Default Compiler and Resource -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<encoding>UTF-8</encoding>
						<optimize>${maven.compiler.optimize}</optimize>
						<showDeprecation>${maven.compiler.showDeprecation}</showDeprecation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Add maven descriptor into Jar -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Source -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Checksum file will be deployed into repository with md5 and sha1 
					extension. -->
				<!-- ******************************************************************* -->
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
					<configuration>
						<createChecksum>true</createChecksum>
					</configuration>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Release -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<scmCommentPrefix>[maven-release-plugin]</scmCommentPrefix>
						<autoVersionSubmodules>true</autoVersionSubmodules>
					</configuration>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Site -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Signature -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<configuration>
						<keyname>${gnupg.keyname}</keyname>
						<passphrase>${gnupg.passphrase}</passphrase>
						<homedir>${gnupg.homedir}</homedir>
						<skip>${gnupg.skip}</skip>
					</configuration>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- LICENCE CHECK -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>com.mycila.maven-license-plugin</groupId>
					<artifactId>maven-license-plugin</artifactId>
					<version>${maven-license-plugin.version}</version>
					<configuration>
						<header>${license.header.path}</header>
						<skip>${license.skip}</skip>
						<failIfMissing>true</failIfMissing>
						<aggregate>true</aggregate>
						<encoding>UTF-8</encoding>
						<excludes>
							<exclude>LICENSE.txt</exclude>
							<exclude>README.*</exclude>
							<exclude>NOTICE.*</exclude>
							<exclude>docs/**</exclude>
							<exclude>**/NOTES</exclude>
							<exclude>**/src/doc/**</exclude>
							<exclude>**/src/test/resources/**</exclude>
							<exclude>**/.gitattributes</exclude>
							<exclude>**/.gitignore</exclude>
							<exclude>**/.svnignore</exclude>
							<exclude>**/src/config/**</exclude>
							<exclude>**/git.properties</exclude>
						</excludes>
						<strictCheck>true</strictCheck>
					</configuration>
					<executions>
						<execution>
							<id>check-headers</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- Help to find which version and commit is running -->
				<!-- https://github.com/ktoso/maven-git-commit-id-plugin -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.1.0</version>
					<executions>
						<execution>
                                                        <id>git-commit-properties</id>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- that's the default value, you don't have to set it -->
						<prefix>git</prefix>
						<!-- that's the default value -->
						<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
						<verbose>false</verbose>
						<!-- If you'd like to tell the plugin where your .git directory is, 
							use this setting, otherwise we'll perform a search trying to figure out the 
							right directory. It's better to add it explicite IMHO. -->
						<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
						<!-- ALTERNATE SETUP - GENERATE FILE -->
						<!-- If you want to keep git information, even in your WAR file etc, 
							use this mode, which will generate a properties file (with filled out values) 
							which you can then normally read using new Properties().load(/**/) -->
						<!-- this is true by default; You may want to set this to false, if 
							the plugin should run inside a <packaging>pom</packaging> project. Most projects 
							won't need to override this property. For an use-case for this kind of behaviour 
							see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21 -->
						<skipPoms>true</skipPoms>
						<!-- this is false by default, forces the plugin to generate the git.properties 
							file -->
						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<!-- The path for the to be generated properties file, it's relative 
							to ${project.basedir} -->
						<generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
						<!-- true by default, controls whether the plugin will fail when no 
							.git directory is found, when set to false the plugin will just skip execution -->
						<!-- @since 2.0.4 -->
						<failOnNoGitDirectory>false</failOnNoGitDirectory>
						<!-- @since 2.1.0 -->
						<!-- read up about git-describe on the in man, or it's homepage - it's 
							a really powerful versioning helper and the recommended way to use git-commit-id-plugin. 
							The configuration bellow is optional, by default describe will run "just 
							like git-describe on the command line", even though it's a JGit reimplementation. -->
						<gitDescribe>
							<!-- don't generate the describe property -->
							<skip>false</skip>
							<!-- if no tag was found "near" this commit, just print the commit's 
								id instead, helpful when you always expect this field to be not-empty -->
							<always>true</always>
							<!-- how many chars should be displayed as the commit object id? 7 
								is git's default, 0 has a special meaning (see end of this README.md), and 
								40 is the maximum value here -->
							<abbrev>7</abbrev>
							<!-- when the build is triggered while the repo is in "dirty state", 
								append this suffix -->
							<dirty>-dirty</dirty>
							<!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" 
								format, even if "on" a tag. The distance will always be 0 if you're "on" 
								the tag. -->
							<forceLongFormat>false</forceLongFormat>
						</gitDescribe>
					</configuration>
				</plugin>
				<!-- ******************************************************************* -->
				<!-- downloads-maven-plugin -->
				<!-- https://github.com/github/maven-plugins -->
				<!-- ******************************************************************* -->
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>downloads-maven-plugin</artifactId>
					<version>0.5</version>
					<configuration>
						<description>${project.version} release of ${project.name}</description>
						<override>true</override>
						<includeAttached>true</includeAttached>
					</configuration>
					<executions>
						<execution>
                                                        <id>git-upload-sources</id>
							<goals>
								<goal>upload</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>${wagon-ssh.version}</version>
			</extension>
		</extensions>
	</build>
	<!-- ********************************************************************************* -->
	<!-- PROFILE -->
	<!-- ********************************************************************************* -->
	<profiles>
		<!-- ********************************************************************************* -->
		<!-- INTELLIGENTS-IA PROFILE -->
		<!-- ********************************************************************************* -->
		<profile>
			<id>intelligents-ia</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- ********************************************************************************* -->
		<!-- downloads-github PROFILE -->
		<!-- ********************************************************************************* -->
		<profile>
			<id>downloads-github</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.github</groupId>
						<artifactId>downloads-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- Github server id to add in settings.xml -->
				<github.global.server>github</github.global.server>
			</properties>
		</profile>
		<!-- ********************************************************************************* -->
		<!-- DOCUMENT ON REQUEST PROFILE -->
		<!-- -Ddocument=true -->
		<!-- ********************************************************************************* -->
		<profile>
			<id>document-artifacts</id>
			<activation>
				<property>
					<name>document</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- ********************************************************************************* -->
		<!-- ON RELEASE PROFILE -->
		<!-- ********************************************************************************* -->
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<!-- ******************************************************************* -->
	<!-- DISTRIBUTION -->
	<!-- ******************************************************************* -->
	<distributionManagement>
		<repository>
			<id>intelligents-ia-releases</id>
			<url>ftp://ftp.lost-oasis.net/web-mvn.intelligents-ia.com/htdocs/releases</url>
		</repository>
		<snapshotRepository>
			<id>intelligents-ia-snapshot</id>
			<url>ftp://ftp.lost-oasis.net/web-mvn.intelligents-ia.com/htdocs/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<repositories>
		<!-- Intelligents-ia RELEASE -->
		<repository>
			<id>intelligents-ia-releases</id>
			<name>Intelligents-ia releases repository</name>
			<url>http://mvn.intelligents-ia.com/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- Intelligents-ia SNAPSHOT -->
		<repository>
			<id>intelligents-ia-snapshot</id>
			<name>Intelligents-ia snapshot repository</name>
			<url>http://mvn.intelligents-ia.com/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<!-- Intelligents-ia Older Repository -->
		<repository>
			<id>intelligents-ia-snapshot-old</id>
			<name>Intelligents-ia snapshot repository</name>
			<url>http://intelligents-ia.com/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>intelligents-ia-releases</id>
			<name>Intelligents-ia releases repository</name>
			<url>http://mvn.intelligents-ia.com/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>intelligents-ia-snapshot</id>
			<name>Intelligents-ia snapshot repository</name>
			<url>http://mvn.intelligents-ia.com/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<!-- ******************************************************************* -->
	<!-- PROPERTIES -->
	<!-- ******************************************************************* -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Current version -->
		<maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
		<maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
		<maven-resources-plugin.version>2.5</maven-resources-plugin.version>
		<maven-jar-plugin.version>2.3.2</maven-jar-plugin.version>
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<maven-install-plugin.version>2.4</maven-install-plugin.version>
		<maven-release-plugin.version>2.2.2</maven-release-plugin.version>
		<maven-site-plugin.version>3.1</maven-site-plugin.version>
		<wagon-ssh.version>2.2</wagon-ssh.version>
		<maven-site-plugin.version>3.1</maven-site-plugin.version>
		<maven-gpg-plugin.version>1.4</maven-gpg-plugin.version>
		<maven-license-plugin.version>1.9.0</maven-license-plugin.version>

		<!-- License header default path. In multimodule project all chil should 
			overide this property with: <br /> <code><license.header.path>${basedir}/../header.txt</license.header.path></code> -->
		<license.header.path>${basedir}/header.txt</license.header.path>
		<license.skip>false</license.skip>

		<!-- GnuPg Configuration key to define per project. By default GnuPg is 
			disabled -->
		<gnupg.homedir>${basedir}/src/gnupg</gnupg.homedir>
		<gnupg.keyname>Your Key Name</gnupg.keyname>
		<gnupg.passphrase>Your Passphrase</gnupg.passphrase>
		<gnupg.skip>true</gnupg.skip>

		<!-- Maven Compiler settings -->
		<maven.compiler.optimize>true</maven.compiler.optimize>
		<maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
	</properties>
</project>
